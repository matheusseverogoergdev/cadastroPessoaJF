/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.senactech.MCadastroPessoa.view;
import br.com.senactech.MCadastroPessoa.model.Carro;
import br.com.senactech.MCadastroPessoa.model.Pessoa;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import br.com.senactech.MCadastroPessoa.util.ValidaCPF;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.regex.PatternSyntaxException;
import static mcadastropessoaJF.MCadastroPessoaJF.cadCarros;
import static mcadastropessoaJF.MCadastroPessoaJF.cadPessoas;

/**
 *
 * @author User
 */
public class carroCadastro extends javax.swing.JFrame {

    /**
     * Creates new form carroCadastro
     */
    public carroCadastro() {
        initComponents();
        cadPessoas.mokPessoas();
        cadCarros.mokCarro();
        addRowToTable();
    }
    
    public void addRowToTable() {
        // Cria obj e recebe a modelagem da tabela JtPessoa do JFrame
        DefaultTableModel model = (DefaultTableModel) jtCarros.getModel();
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        Object colData[] = new Object[4]; //Cria vetor para as colunas da tabela
        for (Carro c: cadCarros.getAll()) {
            colData[0] = c.getPlaca();
            colData[1] = c.getMarca();
            colData[2] = c.getModelo();
            colData[3] = cadPessoas.getNomePes(c.getIdPessoa());
            model.addRow(colData);
        }
    }
    
    private void jTableFilterClear() {
        DefaultTableModel model = (DefaultTableModel) jtCarros.getModel();
        final TableRowSorter<TableModel> sorter = 
                new TableRowSorter<TableModel>(model);
        jtCarros.setRowSorter(sorter);
        sorter.setRowFilter(null);
        jtCarros.clearSelection();
    }
    
    public boolean validaPlaca(String placa) {
        if (placa.matches("^[a-zA-Z]{3}[0-9][A-Za-z0-9][0-9]{2}$")) {
            return true;
        }
        return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtfPlaca = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtfModelo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtfAnoFabricacao = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtfAnoModelo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jtfCor = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jtfNumPortas = new javax.swing.JTextField();
        jbSalvar = new javax.swing.JButton();
        jbLimpar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jbEditar = new javax.swing.JButton();
        jbConfirmar = new javax.swing.JButton();
        jbDeletar = new javax.swing.JButton();
        jbSair = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtCarros = new javax.swing.JTable();
        jbPesqPlaca = new javax.swing.JButton();
        jcbMarca = new javax.swing.JComboBox<>();
        jtfCPFProprietario = new javax.swing.JTextField();
        jlNomeProprietario = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(563, 500));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Cadastro Carro");

        jLabel2.setText("Placa:");

        jtfPlaca.setToolTipText("AAA1234");
        jtfPlaca.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfPlacaFocusLost(evt);
            }
        });

        jLabel3.setText("Marca:");

        jLabel4.setText("Modelo:");

        jtfModelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfModeloActionPerformed(evt);
            }
        });

        jLabel5.setText("Ano Fabri:");

        jtfAnoFabricacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfAnoFabricacaoKeyTyped(evt);
            }
        });

        jLabel6.setText("Ano Modelo:");

        jtfAnoModelo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfAnoModeloKeyTyped(evt);
            }
        });

        jLabel7.setText("Cor:");

        jtfCor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCorActionPerformed(evt);
            }
        });

        jLabel8.setText("Nº de portas:");

        jtfNumPortas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfNumPortasKeyTyped(evt);
            }
        });

        jbSalvar.setText("Salvar");
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbLimpar.setText("Limpar");
        jbLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimparActionPerformed(evt);
            }
        });

        jLabel10.setText("CPF:");

        jbEditar.setText("Editar");
        jbEditar.setEnabled(false);
        jbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarActionPerformed(evt);
            }
        });

        jbConfirmar.setText("Confirmar");
        jbConfirmar.setEnabled(false);
        jbConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConfirmarActionPerformed(evt);
            }
        });

        jbDeletar.setText("Deletar");
        jbDeletar.setEnabled(false);
        jbDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDeletarActionPerformed(evt);
            }
        });

        jbSair.setText("Sair");
        jbSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSairActionPerformed(evt);
            }
        });

        jtCarros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Placa", "Marca", "Modelo", "Proprietário"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtCarros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtCarrosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtCarros);

        jbPesqPlaca.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbPesqPlaca.setForeground(new java.awt.Color(0, 153, 153));
        jbPesqPlaca.setText("Pesq. Placa");
        jbPesqPlaca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPesqPlacaActionPerformed(evt);
            }
        });

        jcbMarca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "Mercedes", "Jeep", "Fiat", "Mitsubishi", "Lincoln", "Land Rover", "Jaguard", "Peugeot", "GM" }));

        jtfCPFProprietario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCPFProprietarioFocusLost(evt);
            }
        });
        jtfCPFProprietario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCPFProprietarioActionPerformed(evt);
            }
        });

        jlNomeProprietario.setText("Nome do Proprietário");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(39, 39, 39)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtfPlaca)
                                    .addComponent(jcbMarca, 0, 170, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jbPesqPlaca))
                                .addGap(1, 1, 1)
                                .addComponent(jtfCor))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jtfModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel10))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jtfCPFProprietario)
                                            .addComponent(jtfAnoFabricacao, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel6))
                                        .addGap(22, 22, 22)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jtfNumPortas)
                                            .addComponent(jtfAnoModelo)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jlNomeProprietario)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jbLimpar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jbSalvar))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jbEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(57, 57, 57)
                                        .addComponent(jbConfirmar)
                                        .addGap(55, 55, 55)
                                        .addComponent(jbDeletar)
                                        .addGap(54, 54, 54)
                                        .addComponent(jbSair)
                                        .addGap(28, 28, 28)))))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbPesqPlaca))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jcbMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jtfCor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtfModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jtfNumPortas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtfAnoFabricacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jtfAnoModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jtfCPFProprietario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlNomeProprietario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbSalvar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbLimpar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSair)
                    .addComponent(jbDeletar)
                    .addComponent(jbConfirmar)
                    .addComponent(jbEditar))
                .addGap(224, 224, 224))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 473, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDeletarActionPerformed
        // TODO add your handling code here:
        jbEditar.setEnabled(false);
        int linha;
        String placa;
        linha = jtCarros.getSelectedRow();
        placa = (String) jtCarros.getValueAt(linha, 0);
        
        Carro c = cadCarros.getByDoc(placa);
        Object[] resp = {"Sim", "Não"};
        int resposta = JOptionPane.showOptionDialog(this, "Deseja realmente "
                + "deletar " + c.getPlaca() + "?", ".:Deletar:.",
                JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null,
                resp, resp[0]);
        if (resposta == 0) {
            cadCarros.deletar(c);
            addRowToTable();
            JOptionPane.showMessageDialog(this, "Carro deletado com sucesso!");
        } else {
            JOptionPane.showMessageDialog(this, "Entendemos sua decisão.",
                    "Deletar", JOptionPane.INFORMATION_MESSAGE);
        }
        jbLimpar.doClick();
    }//GEN-LAST:event_jbDeletarActionPerformed

    private void jbLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimparActionPerformed
        // TODO add your handling code here:
        jtfPlaca.setText("");
        jtfModelo.setText("");
        jtfAnoFabricacao.setText("");
        jtfAnoModelo.setText("");
        jtfCor.setText("");
        jtfNumPortas.setText("");
        jtfCPFProprietario.setText("");
        jcbMarca.setSelectedIndex(0);
        jlNomeProprietario.setText("Nome do Proprietário");
        jbLimpar.setText("Limpar");
        
        jbSalvar.setEnabled(true);
        jbPesqPlaca.setEnabled(true);
        jtfPlaca.setEnabled(true);
        jbEditar.setEnabled(false);
        jbConfirmar.setEnabled(false);
        jbDeletar.setEnabled(false);
        
        jTableFilterClear();
        jtfPlaca.requestFocus();
    }//GEN-LAST:event_jbLimparActionPerformed

    private boolean validaInputs() {
        if (jtfPlaca.isEnabled()) {
            String placa = jtfPlaca.getText().toUpperCase();
            boolean verPlaca = (placa.length() == 7 && !cadCarros.verPlaca(placa));
            if (!verPlaca) {
                String msg = "Placa já cadastrada ou incorreta!";
                JOptionPane.showMessageDialog(this, msg, "Erro",
                        JOptionPane.ERROR_MESSAGE);
                jtfPlaca.requestFocus();
                return false;
            }
        }
        
        boolean verCor = jtfCor.getText().isBlank();
        if (verCor) {
            String msg = "Cor inválida, preencha o campo!";
            JOptionPane.showMessageDialog(this, msg, "Erro",
                    JOptionPane.ERROR_MESSAGE);
            jtfCor.requestFocus();
            return false;
        }
        
        boolean verAnoFabricacao = jtfAnoFabricacao.getText().isBlank();
        if (verAnoFabricacao) {
            String msg = "Ano fabricado inválido, preencha o campo!";
            JOptionPane.showMessageDialog(this, msg, "Erro",
                    JOptionPane.ERROR_MESSAGE);
            jtfAnoFabricacao.requestFocus();
            return false;
        }
        
        boolean verAnoModelo = jtfAnoModelo.getText().isBlank();
        if (verAnoModelo) {
            String msg = "Ano modelo inválido, preencha o campo!";
            JOptionPane.showMessageDialog(this, msg, "Erro",
                    JOptionPane.ERROR_MESSAGE);
            jtfAnoModelo.requestFocus();
            return false;
        }
        
        boolean verModelo = jtfModelo.getText().isBlank();
        if (verModelo) {
            String msg = "Modelo inválido, preencha o campo!";
            JOptionPane.showMessageDialog(this, msg, "Erro",
                    JOptionPane.ERROR_MESSAGE);
            jtfModelo.requestFocus();
            return false;
        }
        
        boolean verPortas = jtfNumPortas.getText().isBlank();
        if (verPortas) {
            String msg = "Número de portas inválido, preencha o campo!";
            JOptionPane.showMessageDialog(this, msg, "Erro",
                    JOptionPane.ERROR_MESSAGE);
            jtfNumPortas.requestFocus();
            return false;
        }
        
        Calendar cal = GregorianCalendar.getInstance();
        int anoAtual = cal.get(Calendar.YEAR);
        int anoFabricacao = Integer.parseInt(jtfAnoFabricacao.getText());
        
        if (anoFabricacao > anoAtual) {
            String msg = "Ano de fabricação inválido."
                    + " Não pode ser maior que o ano atual!";
            JOptionPane.showMessageDialog(this, msg, "Erro", 
                    JOptionPane.ERROR_MESSAGE);
            jtfAnoFabricacao.requestFocus();
            return false;
        }
        
        int anoModelo = Integer.parseInt(jtfAnoModelo.getText());
        boolean testaAnoModelo = cadCarros.verAnoMod(anoFabricacao, anoModelo);
        if (!testaAnoModelo) {
            String msg = "Ano do modelo inválido. Tente novamente!";
            JOptionPane.showMessageDialog(this, msg, "Erro", 
                    JOptionPane.ERROR_MESSAGE);
            jtfAnoModelo.requestFocus();
            return false;
        }
        
        if (jcbMarca.getSelectedIndex() == 0) {
            String msg = "Marca selecionada inválida. Tente novamente!";
            JOptionPane.showMessageDialog(this, msg, "Erro",
                    JOptionPane.ERROR_MESSAGE);
            jcbMarca.requestFocus();
            return false;
        }

        if (cadPessoas.getByDoc(jtfCPFProprietario.getText()) == null) {
            JOptionPane.showMessageDialog(this, "CPF não cadastrado!",
            "Erro", JOptionPane.ERROR_MESSAGE);
            jtfCPFProprietario.requestFocus();
            return false;
        }
        
        return true;
    }
    
    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        // TODO add your handling code here:
        if (validaInputs()) {
            int idCarro = cadCarros.gerarId();
            int idPessoa = cadPessoas.pesqIdPes(jtfCPFProprietario.getText());
            String placa = jtfPlaca.getText();
            String marca = jcbMarca.getSelectedItem().toString();
            String modelo = jtfModelo.getText();
            int anoFabricacao = Integer.parseInt(jtfAnoFabricacao.getText());
            int anoModelo = Integer.parseInt(jtfAnoModelo.getText());
            String cor = jtfCor.getText();
            int portas = Integer.parseInt(jtfNumPortas.getText());
            
            Carro c = new Carro(idCarro, placa, marca, modelo, anoFabricacao,
                    anoModelo, cor, portas, idPessoa);
            cadCarros.add(c);
            
            JOptionPane.showMessageDialog(this, "Carro foi salvo com sucesso!");
            jbLimpar.doClick();
        }
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jtfCorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCorActionPerformed

    private void jtfModeloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfModeloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfModeloActionPerformed

    private void jtfAnoFabricacaoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfAnoFabricacaoKeyTyped
        // TODO add your handling code here:
        String caracteres = "0987654321";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_jtfAnoFabricacaoKeyTyped

    private void jtfAnoModeloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfAnoModeloKeyTyped
        // TODO add your handling code here:
        String caracteres = "0987654321";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_jtfAnoModeloKeyTyped

    private void jtfNumPortasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfNumPortasKeyTyped
        // TODO add your handling code here:
        String caracteres = "0987654321";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_jtfNumPortasKeyTyped

    private void jbSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSairActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jbSairActionPerformed

    private void jtfPlacaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfPlacaFocusLost
        // TODO add your handling code here:
        String placa = jtfPlaca.getText();
        jtfPlaca.setText(placa.toUpperCase());
    }//GEN-LAST:event_jtfPlacaFocusLost

    private void jtfCPFProprietarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCPFProprietarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCPFProprietarioActionPerformed

    private void jtfCPFProprietarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCPFProprietarioFocusLost
        // TODO add your handling code here:
        if (!ValidaCPF.isCPF(jtfCPFProprietario.getText())) {
            JOptionPane.showMessageDialog(this, "CPF inválido!",
            "Erro", JOptionPane.ERROR_MESSAGE);
            jtfCPFProprietario.requestFocus();
        } else if (cadPessoas.verCPF(jtfCPFProprietario.getText())) {
            int id = cadPessoas.pesqIdPes(jtfCPFProprietario.getText());
            jlNomeProprietario.setText(cadPessoas.getNomePes(id));
        }
    }//GEN-LAST:event_jtfCPFProprietarioFocusLost

    private void jtCarrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtCarrosMouseClicked
        // TODO add your handling code here:
        jbEditar.setEnabled(true);
        jbDeletar.setEnabled(true);
        jbSalvar.setEnabled(false);
    }//GEN-LAST:event_jtCarrosMouseClicked

    private void jbPesqPlacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPesqPlacaActionPerformed
        // TODO add your handling code here:
        jTableFilterClear();
        if (!validaPlaca(jtfPlaca.getText())) {
            JOptionPane.showMessageDialog(this, "Placa inválida!", "Erro",
                    JOptionPane.ERROR_MESSAGE);
            jtfPlaca.requestFocus();
        } else if (cadCarros.verPlaca(jtfPlaca.getText())) {
            DefaultTableModel model = (DefaultTableModel) jtCarros.getModel();
            final TableRowSorter<TableModel> sorter = new 
            TableRowSorter<TableModel>(model);
            jtCarros.setRowSorter(sorter);
            String text = jtfPlaca.getText();
            if (text.length() == 0) {
                sorter.setRowFilter(null);
            } else {
                try {
                    sorter.setRowFilter(RowFilter.regexFilter(text));
                } catch(PatternSyntaxException pse) {
                    JOptionPane.showMessageDialog(rootPane, 
                            "Registro não encontrado!");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Placa não encontrada!", 
                    "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbPesqPlacaActionPerformed

    private void jbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarActionPerformed
        // TODO add your handling code here:
        // Ajustando comportamento dos botões:
        jbDeletar.setEnabled(false);
        jbSalvar.setEnabled(false);
        jbEditar.setEnabled(false);
        jtfPlaca.setEnabled(false);
        jbPesqPlaca.setEnabled(false);
        jbConfirmar.setEnabled(true);
        jbLimpar.setText("Cancelar");
        
        // Carrega os dados da pessoa selecionada nos jTextField
        int linha;
        linha = jtCarros.getSelectedRow();
        String placa = (String) jtCarros.getValueAt(linha, 0);
        JOptionPane.showMessageDialog(this, "Placa: " + placa);
        Carro c = cadCarros.getByDoc(placa);
        
        for (int i = 0; i < jcbMarca.getItemCount(); i++) {
            Object currentObject = jcbMarca.getItemAt(i).toString();
            if (currentObject.equals(c.getMarca())) {
                jcbMarca.setSelectedIndex(i);
                break;
            }
        }
        
        jtfPlaca.setText(c.getPlaca());
        jtfModelo.setText(c.getModelo());
        jtfCor.setText(c.getCor());
        jtfNumPortas.setText(Integer.toString(c.getnPortas()));
        jtfAnoFabricacao.setText(Integer.toString(c.getAnoFabricacao()));
        jtfAnoModelo.setText(Integer.toString(c.getAnoModelo()));
        jtfCPFProprietario.setText(cadPessoas.getCPFPes(c.getIdPessoa()));
        jlNomeProprietario.setText(cadPessoas.getNomePes(c.getIdPessoa()));
    }//GEN-LAST:event_jbEditarActionPerformed

    private void jbConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConfirmarActionPerformed
        // TODO add your handling code here:
        if (validaInputs()) {
            Carro c = cadCarros.getByDoc(jtfPlaca.getText());
            Pessoa p = cadPessoas.getByDoc(jtfCPFProprietario.getText());
            
            c.setMarca(jcbMarca.getSelectedItem().toString());
            c.setModelo(jtfModelo.getText());
            c.setCor(jtfCor.getText());
            c.setnPortas(Integer.parseInt(jtfNumPortas.getText()));
            c.setAnoFabricacao(Integer.parseInt(jtfAnoFabricacao.getText()));
            c.setAnoModelo(Integer.parseInt(jtfAnoModelo.getText()));
            c.setIdPessoa(p.getIdPessoa());
            addRowToTable();
            jbLimpar.setText("Limpar");
            jbLimpar.doClick();
            JOptionPane.showMessageDialog(this, 
                    "Carro foi editado com sucesso!", "Sucesso", 
                    JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jbConfirmarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(carroCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(carroCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(carroCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(carroCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new carroCadastro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbConfirmar;
    private javax.swing.JButton jbDeletar;
    private javax.swing.JButton jbEditar;
    private javax.swing.JButton jbLimpar;
    private javax.swing.JButton jbPesqPlaca;
    private javax.swing.JButton jbSair;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JComboBox<String> jcbMarca;
    private javax.swing.JLabel jlNomeProprietario;
    private javax.swing.JTable jtCarros;
    private javax.swing.JTextField jtfAnoFabricacao;
    private javax.swing.JTextField jtfAnoModelo;
    private javax.swing.JTextField jtfCPFProprietario;
    private javax.swing.JTextField jtfCor;
    private javax.swing.JTextField jtfModelo;
    private javax.swing.JTextField jtfNumPortas;
    private javax.swing.JTextField jtfPlaca;
    // End of variables declaration//GEN-END:variables

}
